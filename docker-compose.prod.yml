# Production environment configuration
# Use this file for production deployment: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  postgres:
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cherryserver}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  # Must be set via environment variable
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Remove init scripts in production - use migrations instead
    ports: []  # Don't expose database port in production
    command: >
      postgres
        -c max_connections=100
        -c shared_buffers=256MB
        -c effective_cache_size=1GB
        -c maintenance_work_mem=64MB
        -c checkpoint_completion_target=0.9
        -c wal_buffers=16MB
        -c default_statistics_target=100
        -c random_page_cost=1.1
        -c effective_io_concurrency=200

  cherryserver:
    restart: always
    environment:
      # Database Configuration (from environment variables)
      CHERRYSERVER_DATABASE__URL: ${DATABASE_URL}
      CHERRYSERVER_DATABASE__MAX_CONNECTIONS: ${DB_MAX_CONNECTIONS:-50}
      CHERRYSERVER_DATABASE__MIN_CONNECTIONS: ${DB_MIN_CONNECTIONS:-5}
      
      # Server Configuration
      CHERRYSERVER_SERVER__HOST: "0.0.0.0"
      CHERRYSERVER_SERVER__PORT: 3000
      
      # JWT Configuration (from environment variables)
      CHERRYSERVER_JWT__SECRET: ${JWT_SECRET}
      CHERRYSERVER_JWT__EXPIRATION_HOURS: ${JWT_EXPIRATION_HOURS:-24}
      
      # Logging Configuration
      CHERRYSERVER_LOGGING__LEVEL: ${LOG_LEVEL:-warn}
    volumes:
      # Use production config
      - ./config-prod.yaml:/app/config.yaml:ro
    ports:
      - "${APP_PORT:-3000}:3000"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Remove pgAdmin from production
  pgadmin:
    profiles:
      - admin  # Disable by default, enable with --profile admin

volumes:
  postgres_data:
    driver: local

networks:
  cherryserver-network:
    driver: bridge 